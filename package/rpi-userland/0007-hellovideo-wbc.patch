--- a/host_applications/linux/apps/hello_pi/hello_video/video.c
+++ b/host_applications/linux/apps/hello_pi/hello_video/video.c
@@ -34,7 +34,7 @@ SOFTWARE, EVEN IF ADVISED OF THE POSSIBI
 #include "bcm_host.h"
 #include "ilclient.h"
 
-static int video_decode_test(char *filename)
+static int video_decode_test()
 {
    OMX_VIDEO_PARAM_PORTFORMATTYPE format;
    OMX_TIME_CONFIG_CLOCKSTATETYPE cstate;
@@ -42,26 +42,20 @@ static int video_decode_test(char *filen
    COMPONENT_T *list[5];
    TUNNEL_T tunnel[4];
    ILCLIENT_T *client;
-   FILE *in;
    int status = 0;
    unsigned int data_len = 0;
 
    memset(list, 0, sizeof(list));
    memset(tunnel, 0, sizeof(tunnel));
 
-   if((in = fopen(filename, "rb")) == NULL)
-      return -2;
-
    if((client = ilclient_init()) == NULL)
    {
-      fclose(in);
       return -3;
    }
 
    if(OMX_Init() != OMX_ErrorNone)
    {
       ilclient_destroy(client);
-      fclose(in);
       return -4;
    }
 
@@ -111,6 +105,7 @@ static int video_decode_test(char *filen
    format.nVersion.nVersion = OMX_VERSION;
    format.nPortIndex = 130;
    format.eCompressionFormat = OMX_VIDEO_CodingAVC;
+format.xFramerate = 60 << 16;
 
    if(status == 0 &&
       OMX_SetParameter(ILC_GET_HANDLE(video_decode), OMX_IndexParamVideoPortFormat, &format) == OMX_ErrorNone &&
@@ -127,7 +122,8 @@ static int video_decode_test(char *filen
          // feed data and wait until we get port settings changed
          unsigned char *dest = buf->pBuffer;
 
-         data_len += fread(dest, 1, buf->nAllocLen-data_len, in);
+	data_len = read(STDIN_FILENO, dest, buf->nAllocLen-data_len);
+
 
          if(port_settings_changed == 0 &&
             ((data_len > 0 && ilclient_remove_event(video_decode, OMX_EventPortSettingsChanged, 131, 0, 0, 1) == 0) ||
@@ -183,19 +179,18 @@ static int video_decode_test(char *filen
 
       // wait for EOS from render
       ilclient_wait_for_event(video_render, OMX_EventBufferFlag, 90, 0, OMX_BUFFERFLAG_EOS, 0,
-                              ILCLIENT_BUFFER_FLAG_EOS, -1);
+                              ILCLIENT_BUFFER_FLAG_EOS, 10000);
 
       // need to flush the renderer to allow video_decode to disable its input port
       ilclient_flush_tunnels(tunnel, 0);
 
+      ilclient_disable_port_buffers(video_decode, 130, NULL, NULL, NULL);
    }
 
-   fclose(in);
 
    ilclient_disable_tunnel(tunnel);
    ilclient_disable_tunnel(tunnel+1);
    ilclient_disable_tunnel(tunnel+2);
-   ilclient_disable_port_buffers(video_decode, 130, NULL, NULL, NULL);
    ilclient_teardown_tunnels(tunnel);
 
    ilclient_state_transition(list, OMX_StateIdle);
@@ -211,12 +206,8 @@ static int video_decode_test(char *filen
 
 int main (int argc, char **argv)
 {
-   if (argc < 2) {
-      printf("Usage: %s <filename>\n", argv[0]);
-      exit(1);
-   }
    bcm_host_init();
-   return video_decode_test(argv[1]);
+   return video_decode_test();
 }
 
 
